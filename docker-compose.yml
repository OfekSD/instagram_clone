version: "3"
services:
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    depends_on:
      - frontend
      - resize-api
    ports:
      - '8080:80'
    
  frontend:
    restart: always
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
  
  auth:
    restart: always
    build: 
      context: ./auth
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./auth:/app
      - ./auth/node_modules:/app/node_modules
    environment:
      - SECRET_KEY=c768b35801e2fcc50404e7fe0c5bdbd0
      - GRAPHQL_LINK='hasura'
      - PG_DATABASE_URL=postgres://postgres:postgrespassword@postgres:5432/postgres

  
  resize-api:
    restart: always
    build: 
      context: ./resize-api
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    environment:
      DEVELOPMENT: True
    volumes:
      - ./resize-api:/app

  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  hasura:
    image: hasura/graphql-engine:v2.13.0
    ports:
    - "1234:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: Aa123456
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key" : "c768b35801e2fcc50404e7fe0c5bdbd0"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous 

volumes:
  db_data:

